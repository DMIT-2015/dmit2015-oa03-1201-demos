package dmit2015.model;

import lombok.Data;

import javax.persistence.*;
import javax.validation.constraints.*;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Objects;

@Data
@Entity                                 // This class is map to database table with the same name as the class name
@Table(name = "course_assignments")     // This entity class maps to a database table named movies
public class CourseAssignment implements Serializable {

    @Id                                                     // This is the primary key field
    @GeneratedValue(strategy = GenerationType.IDENTITY)     // This primary key field is generated by the database
    private Long id;

    @Column(length = 32, nullable = false)
    @NotBlank(message = "The Assignment Name field is required.")
    @Size(min = 3, max = 32, message = "The field Assignment Name must be a string with a minimum length of {min} and a maximum length of {max}.")
    private String assignmentName;

    @Column(nullable = false)
    @NotNull(message = "The Due DateTime field is required")
    private LocalDateTime dueDateTime;

    private LocalDateTime submittedDateTime;

    @Min(value = 0, message = "The field Grade must be a value between 0 and 100.")
    @Max(value = 100, message = "The field Grade must be a value between 0 and 100.")
    private Integer grade;

    @NotBlank(message = "The username field is required")
    @Column(length=32, nullable = false)
    private String username;

    @Version
    private Integer version;

    /**
     * https://vladmihalcea.com/the-best-way-to-implement-equals-hashcode-and-tostring-with-jpa-and-hibernate/
     */
    @Override
    public boolean equals(Object o) {
        if (this == o)
            return true;

        if (!(o instanceof CourseAssignment))
            return false;

        CourseAssignment other = (CourseAssignment) o;
        return Objects.equals(getId(), other.getId());
    }

    /**
     * https://vladmihalcea.com/the-best-way-to-implement-equals-hashcode-and-tostring-with-jpa-and-hibernate/
     */
    @Override
    public int hashCode() {
        return 31;
    }

}
